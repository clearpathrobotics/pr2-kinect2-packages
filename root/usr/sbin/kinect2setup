#!/bin/bash

from optparse import OptionParser

parser = OptionParser(usage="usage: %prog [options]")
parser.add_option("-h", "--hostname", dest="hostname",
                  help="this computer's hostname", metavar="HOSTNAME", default="pr2-head")
parser.add_option("-m", "--master", dest="master",
                  help="ROS_MASTER_URI", metavar="MASTER", default="c1")
parser.add_option("-i", "--ip", dest="ip",
                  help="ROS_IP", metavar="ROSIP", default="10.68.0.10")

(options, args) = parser.parse_args()

echo "Kinect Driver and ROS Installion"
echo "The following script will install:
	beignet
	libfreenect2 (Kinect2 Driver)
	iai_kinect2  (ROS Driver for Kinect2)"
echo "The script will give {} access to libfreenect2.".format(options.hostname)
echo "The ROS_MASTER_URI will be set to {}.".format(options.master)
echo "ROS_IP will be set to {}.".format(options.ip)
read -p "Do you wish to continue [Enter]?"

# Install Libfreenect2
cd
if [ ! -d "libfreenect2" ];
then
    git clone https://github.com/OpenKinect/libfreenect2.git
    sudo chown options.hostname -R libfreenect2
    sudo chgrp options.hostname -R libfreenect2
    #sudo apt-get install build-essential libturbojpeg libjpeg-turbo8-dev libtool autoconf libudev-dev cmake mesa-common-dev freeglut3-dev libxrandr-dev doxygen libxi-dev automake
    sudo apt-add-repository ppa:floe/libusb && sudo apt-get update && sudo apt-get upgrade # temp solution proposed by libfreenect2 owner, floe
    cd libfreenect2/depends
    sh install_ubuntu.sh
    sudo dpkg -i libglfw3*_3.0.4-1_*.deb #Ubuntu 14.04 only


    # [ Removed from deb package. Added in build-depends ]
    # Install Beignet
    # sudo add-apt-repository ppa:pmjdebruijn/beignet-testing
    # sudo apt-get update
    # sudo apt-get install beignet-dev
    # sudo apt-get install beignet-opencl-icd

    # Make Libfreenect2
    cd ~/libfreenect2
    mkdir build && cd build
    cmake .. -DENABLE_CXX11=ON
    make
    sudo make install
fi

# Make UDEV rules for Kinect
cd
sudo cp libfreenect2/rules/90-kinect2.rules /etc/udev/rules.d/

# Install Iai_kinect2
if [ ! -d "kinect_ws" ];
then
    mkdir ~/kinect_ws && mkdir ~/kinect_ws/src
    sudo chown options.hostname -R kinect_ws
    sudo chgrp options.hostname -R kinect_ws
    cd ~/kinect_ws/src
    catkin_init_workspace
    git clone https://github.com/code-iai/iai_kinect2.git
    cd ~/kinect_ws/src/iai_kinect2
    rosdep install -r --from-paths .
    cd ~/kinect_ws
    sudo apt-get update
    catkin_make -DCMAKE_BUILD_TYPE="Release"
fi

# Chrony setup and syncing clocks with c1
sudo sed -i '/server 3.debian.pool.ntp.org offline minpoll 8/ a\server options.master offline minpoll 8' /etc/chrony/chrony.conf
sudo /etc/init.d/chrony stop
sudo ntpdate options.master
sudo /etc/init.d/chrony start

# Source Files for rosrun iai_kinect
echo "source ~/kinect_ws/devel/setup.bash" >> ~/.bashrc
echo "export ROS_MASTER_URI=http://{}:11311".format(options.master) >> ~/.bashrc
echo "export ROS_IP={}".format(options.ip) >> ~/.bashrc
. ~/.bashrc

# Run Iai_kinect2 on startup
# sudo apt-get install ros-indigo-robot-upstart -y
# cd
# cd ~/kinect_ws/src/iai_kinect2/
# rosrun robot_upstart install --master http://c1:11311 kinect2_bridge/launch/

#sudo sed -i '/^exit 0/isudo chmod 666 /dev/dri/*' /etc/rc.local

# dpkg does not require following --
# Replace hostname and hosts file
# sudo cp -i ~/ROSnect2_Intel/hosts /etc/hosts
# sudo cp -i ~/ROSnect2_Intel/hostname /etc/hostname

# Source bashrc final time
# . ~/.bashrc
